<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
             http://www.springframework.org/schema/beans/spring-beans.xsd
             http://www.springframework.org/schema/security
             http://www.springframework.org/schema/security/spring-security.xsd
             http://code.alibabatech.com/schema/dubbo
             http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

    <!--远程注册一个service对象-->
    <dubbo:application name="pinyougou-shop-web"/>
    <dubbo:registry address="zookeeper://192.168.12.168:2181"/>
    <dubbo:reference interface="com.pinyougou.sellergoods.service.SellerService" id="sellerService"/>
    <!--页面拦截规则-->
    <http pattern="/shoplogin.html" security="none"/>
    <http pattern="/register.html" security="none"/>
    <http pattern="/seller/add.do" security="none"/>
    <http pattern="/css/**" security="none"/>
    <http pattern="/plugins/**" security="none"/>
    <http pattern="/img/**" security="none"/>
    <http pattern="/js/**" security="none"/>

    <http use-expressions="false">
        <!--设置拦截对象,拥有USER角色的可以任意访问-->
        <intercept-url pattern="/**" access="ROLE_SELLER"/>
        <!--表单登陆信息-->
        <form-login default-target-url="/admin/index.html"
            authentication-failure-url="/shoplogin.html" login-page="/shoplogin.html"
                    always-use-default-target="true"/>
        <!--禁止跨站请求伪造表单校验-->
        <csrf disabled="true"/>

        <!--如果使用了 iframe 等框架，希望跳转也是在框架内跳转的话-->
        <headers>
            <frame-options policy="SAMEORIGIN"/>
        </headers>

        <logout/>

    </http>

    <!--注册一个认证服务对象-->
    <beans:bean id="userDetailService" class="com.pinyougou.shop.service.impl.UserDetailServiceImpl">
        <beans:property name="sellerService" ref="sellerService"/>
    </beans:bean>

    <!--注册BCrypt加密算法-->
    <beans:bean id="bCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <!--认证管理器-->
    <authentication-manager>
        <authentication-provider user-service-ref="userDetailService">
            <!--指定加密算法-->
            <password-encoder ref="bCryptPasswordEncoder"/>
        </authentication-provider>
    </authentication-manager>

</beans:beans>